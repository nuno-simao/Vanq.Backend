// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vanq.Infrastructure.Persistence;

#nullable disable

namespace Vanq.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "10.0.0-rc.1.25451.107")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vanq.Domain.Entities.FeatureFlag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsCritical")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Metadata")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Environment")
                        .HasDatabaseName("IX_FeatureFlags_Environment");

                    b.HasIndex("Key", "Environment")
                        .IsUnique()
                        .HasDatabaseName("IX_FeatureFlags_Key_Environment");

                    b.ToTable("FeatureFlags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fdaab4c5-befd-4a2a-a39f-276556d568bc"),
                            Description = "Habilita o próprio módulo de feature flags",
                            Environment = "Development",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "feature-flags-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("b25ee248-5561-04cc-974a-15a197ad1c6b"),
                            Description = "Habilita o próprio módulo de feature flags",
                            Environment = "Staging",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "feature-flags-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("1c2f53ab-2f94-aa2c-ede9-7e147d72ac88"),
                            Description = "Habilita o próprio módulo de feature flags",
                            Environment = "Production",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "feature-flags-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("b66b3373-38de-e53c-65f2-42f2089ed638"),
                            Description = "Habilita sistema RBAC (migrado de RbacOptions.FeatureEnabled)",
                            Environment = "Development",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "rbac-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("663ab5cb-8993-9f5b-c45d-62ef8b37d126"),
                            Description = "Habilita sistema RBAC (migrado de RbacOptions.FeatureEnabled)",
                            Environment = "Staging",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "rbac-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("e70c8882-5b6d-99f4-ee31-cf1bf30e0244"),
                            Description = "Habilita sistema RBAC (migrado de RbacOptions.FeatureEnabled)",
                            Environment = "Production",
                            IsCritical = true,
                            IsEnabled = true,
                            Key = "rbac-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("745531e5-437d-1eef-155d-952bfc4b39b9"),
                            Description = "Permite registro de novos usuários (SPEC-0001)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "user-registration-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("cf7be7e2-6760-440f-2ebb-1f2206bd88b7"),
                            Description = "Permite registro de novos usuários (SPEC-0001)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "user-registration-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("744c57d8-6118-24f5-a4bb-23fd8a8e1832"),
                            Description = "Permite registro de novos usuários (SPEC-0001)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "user-registration-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("9c8e1dd4-9916-53a8-bd2a-0c4fe987bf64"),
                            Description = "Habilita política CORS permissiva para dev/debug (SPEC-0002)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "cors-relaxed",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("c3737442-9abf-d4a7-2cf8-1a99b352dbba"),
                            Description = "Habilita política CORS permissiva para dev/debug (SPEC-0002)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "cors-relaxed",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("05c9c5cc-f8f2-e04a-a5d7-b11a859ad33e"),
                            Description = "Habilita política CORS permissiva para dev/debug (SPEC-0002)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "cors-relaxed",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("a7a2021a-d33f-aa3b-76b4-06ebaed95731"),
                            Description = "Usa Problem Details (RFC 7807) em erros (SPEC-0003)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "problem-details-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("f8226784-0600-57db-e475-505996722505"),
                            Description = "Usa Problem Details (RFC 7807) em erros (SPEC-0003)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "problem-details-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("0ae53468-3990-d249-3e46-42109c7ab1dd"),
                            Description = "Usa Problem Details (RFC 7807) em erros (SPEC-0003)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "problem-details-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("aa4cc1a5-028b-2486-01c3-f74f786acf8f"),
                            Description = "Expõe endpoints de health check (SPEC-0004)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "health-checks-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("8e40b372-45d0-0b7b-0374-b3a225a78b81"),
                            Description = "Expõe endpoints de health check (SPEC-0004)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "health-checks-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("b89aaf67-b8de-a805-e72d-d2b93e938790"),
                            Description = "Expõe endpoints de health check (SPEC-0004)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "health-checks-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("2d52b6e9-d532-b756-eb17-5a5b69703181"),
                            Description = "Ativa middleware global de tratamento de erros (SPEC-0005)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "error-middleware-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("888d90a9-370c-7848-716e-f6fc2ea27090"),
                            Description = "Ativa middleware global de tratamento de erros (SPEC-0005)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "error-middleware-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("fcbac6b3-4a43-cff2-a509-1a8b18741db5"),
                            Description = "Ativa middleware global de tratamento de erros (SPEC-0005)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "error-middleware-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("45462cd5-0f47-b021-d36a-64bef233f298"),
                            Description = "Habilita módulo de parâmetros do sistema (SPEC-0007)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "system-params-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("fcdc580b-7744-a134-7a2d-e514915e2936"),
                            Description = "Habilita módulo de parâmetros do sistema (SPEC-0007)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "system-params-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("251daf83-ee7d-7be4-037a-0c90b33e96a6"),
                            Description = "Habilita módulo de parâmetros do sistema (SPEC-0007)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "system-params-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("f6d20774-a2ca-0790-7c69-de2b37910be7"),
                            Description = "Ativa rate limiting global (SPEC-0008)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "rate-limiting-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("2d1035ca-1b41-e335-320e-55ed6fd0b3a9"),
                            Description = "Ativa rate limiting global (SPEC-0008)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "rate-limiting-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("ddc1a5b5-9164-6982-8871-4ccbc63dd1e4"),
                            Description = "Ativa rate limiting global (SPEC-0008)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "rate-limiting-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("9dab97f4-e16a-5caf-c9dd-2c621428b4b1"),
                            Description = "Usa Serilog com enriquecimento estruturado (SPEC-0009)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "structured-logging-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("5fff5a42-856a-a4bd-45a6-a6f3f28e7a3b"),
                            Description = "Usa Serilog com enriquecimento estruturado (SPEC-0009)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "structured-logging-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("eb63f5ab-f359-779a-e7df-c33ddeaee7c0"),
                            Description = "Usa Serilog com enriquecimento estruturado (SPEC-0009)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "structured-logging-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("097268dd-0584-14fd-6156-cd7d73ff3fb4"),
                            Description = "Exporta métricas Prometheus (SPEC-0010)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "metrics-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("f8d2c3b4-c47a-3f88-eb49-531ee7bc3ee4"),
                            Description = "Exporta métricas Prometheus (SPEC-0010)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "metrics-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("f1ce2131-826e-d501-3cf7-e84b4b7f4ec0"),
                            Description = "Exporta métricas Prometheus (SPEC-0010)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "metrics-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("2adace35-c2b8-3182-9a4a-ea1b25cb26a8"),
                            Description = "Métricas detalhadas de autenticação (SPEC-0010)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = true,
                            Key = "metrics-detailed-auth",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("09171696-5e3c-0bd6-20fa-987dbec68f68"),
                            Description = "Métricas detalhadas de autenticação (SPEC-0010)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "metrics-detailed-auth",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("c85ee62e-d73a-7e45-a79e-173f63b2c708"),
                            Description = "Métricas detalhadas de autenticação (SPEC-0010)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "metrics-detailed-auth",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("03a95e32-ee67-d688-0f58-7839b6c5bac5"),
                            Description = "Grava auditoria completa de alterações (SPEC-0006-V2)",
                            Environment = "Development",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "feature-flags-audit-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("2ac0334f-5dc5-af51-fb34-fdf3f32b2b05"),
                            Description = "Grava auditoria completa de alterações (SPEC-0006-V2)",
                            Environment = "Staging",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "feature-flags-audit-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        },
                        new
                        {
                            Id = new Guid("78d6d418-7b7b-e291-baf8-44dbb8798744"),
                            Description = "Grava auditoria completa de alterações (SPEC-0006-V2)",
                            Environment = "Production",
                            IsCritical = false,
                            IsEnabled = false,
                            Key = "feature-flags-audit-enabled",
                            LastUpdatedAt = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            LastUpdatedBy = "system-seed"
                        });
                });

            modelBuilder.Entity("Vanq.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReplacedByTokenHash")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStampSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("UserId", "CreatedAt");

                    b.HasIndex("UserId", "TokenHash")
                        .IsUnique();

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AddedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("AddedBy")
                        .HasColumnType("uuid");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AssignedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("AssignedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "RoleId", "AssignedAt");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Vanq.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Vanq.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vanq.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Vanq.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vanq.Domain.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Vanq.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Vanq.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vanq.Domain.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vanq.Domain.Entities.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Vanq.Domain.Entities.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
